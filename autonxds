#!/usr/bin/env python



"""
                ########################################
                #                                      #
                # Automagically integrate xfel data    #
                #                                      #
                ########################################


Integrate X-FEL data using vanilla nXDS (http://nxds.mpimf-heidelberg.mpg.de/).
"""

import xds
from subprocess import call
import argparse




def main():
    parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument("image1", type=str, help="Specify the first image in an XFEL dataset. Images must be enumerated with fixed width, zero padded integers __immediately__ prior to the file extension (/path/to/image/prefix00001.cbf).")
    parser.add_argument("--xdsin", type=str, help="XDS.INP file with default parameters to use during integration. Some parameters are overridden during the process.", default=None)
    parser.add_argument("--generate", action="store_true", help="Use the generate_XDS.INP to try to guess some sane nXDS.INP parameters.")
    parser.add_argument("--align", action="store_true", help="Align the XPARM entries for consistent indexing.")
    parser.add_argument("--serial", action="store_true", help="Use nxds rather than nxds_par.")
    args = parser.parse_args()

    dataset = xds.dataset(args.image1)

    if args.generate:
        xdsinp = dataset.generate_nxdsin()
    else:
        xdsinp = xds.nxdsinp()

    if args.xdsin is not None:
        overrides = xds.nxdsinp(args.xdsin)
        xdsinp.update(overrides)

#    -------------------------------------
#    | RUN nXDS                          |
#    -------------------------------------

    with open('LISTIM', 'w') as out:
        out.write('\n'.join(dataset.imlist))
    xdsinp['JOB='] = " XYCORR INIT COLSPOT POWDER IDXREF"# INTEGRATE CORRECT"
    xdsinp['IMAGE_LIST='] = "LISTIM"
    xdsinp['IMAGE_DIRECTORY='] = dataset.dirname

    xdsinp.write()
    if args.serial:
        call(['nxds'])
    else:
        call(['nxds_par'])
    xparms = xds.xparm("XPARM.nXDS")
    if args.align:
        xparms.align_parms()
    xparms.write("XPARM.nXDS")

    xdsinp['JOB='] = " INTEGRATE CORRECT"
    xdsinp.write()
    if args.serial:
        call(['nxds'])
    else:
        call(['nxds_par'])

if __name__=="__main__":
  main()


