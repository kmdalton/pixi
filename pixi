#!/usr/bin/env python

import xds
from subprocess import call
import argparse


"""
PIXI


Integrate pump probe X-FEL data using nXDS (http://nxds.mpimf-heidelberg.mpg.de/).
PIXI accepts sets of images acquired with crystals in the same position and integrates 
them on a per image basis using the same reflection profiles and geometric parameters 
for equivalent images."
"""


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("refimage1", type=str, help="PIXI will integrate an arbitrary number of datasets with parameters learned from the first dataset. Specify the first image in each dataset. Images must be enumerated with fixed width, zero padded integers __immediately__ prior to the file extension (/path/to/image/prefix00001.cbf).")
    parser.add_argument("otherimage1", type=str, nargs='+', help="PIXI will integrate an arbitrary number of datasets with parameters learned from the first dataset. Specify the first image in each dataset. Images must be enumerated with fixed width, zero padded integers __immediately__ prior to the file extension (/path/to/image/prefix00001.cbf).")
    parser.add_argument("--xdsin", type=str, help="XDS.INP file with default parameters to use during integration. Some parameters are overridden during the process, including but not limitted to those relating to spot profiling and parameter refinement. ", default=nxdsinp())
    parser.add_argument("--generate", action="store_true", help="Use the generate_XDS.INP to try to guess some sane nXDS.INP parameters.")
    args = parser.parse_args()

    reference_dataset = xds.dataset(parser.refimage1)

    if args.generate:
        xdsinp = reference_dataset.generate_nxdsin()
    else:
        xdsinp = xds.nxdsinp()

    if args.xdsin is not None:
        overrides = xds.nxdsinp(args.xdsin)
        xdsinp.update(overrides)

    """
    -------------------------------------
    | phase one: index reference data   |
    -------------------------------------
    """

    xdsinp['JOB='] = " XYCORR INIT COLSPOT POWDER IDXREF"
    xdsinp.write()
    call(['nxds_par'])

    """
    -------------------------------------
    | phase two: align A matrices       |
    -------------------------------------
    """
    xparms = xds.xparm("XPARM.nXDS")
    xparms.align_parms()
    xparms.write()

    
    """
    -------------------------------------
    | phase three: integrate ref data   |
    -------------------------------------
    """
    xdsinp['JOB='] = " INTEGRATE"
    xdsinp.write()
    call(['nxds_par'])


if __name__=="__main__":
  main()


